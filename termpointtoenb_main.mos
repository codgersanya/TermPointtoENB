#*************************************#
#                                     #
#            TermPointToENB           #
#                                     #
#*************************************#

#This script adds X2s between ENBs via a user-friendly dialouge format.
#The only input needed is the name of X2-relation(s).

#Prerequisites:
#The script may be started from offline amos/moshell on ENM
#If it is run from moshell, ensure that ~/moshell/sitefiles/ipdatabase is up to date and includes the addresses of all the affected nodes.
#Also, always ensure that variables are set correctly in your ~/.moshellrc so that login to nodes can work -based on nodenames only.

#Usage:
#After running the script (amos termpointtoenb_main.mos) it asks whether you have a file with the list of X2s.
#a) If the answer is yes, then the expected format is displayed.
#Then it asks the (path/filename)
#b) If the answer is no, then a manual input dialogue opens.
#The expected input format is: nodename (source-target) uppercase letters + numbers, separated by dash (e.g: 69012BB2-69014BB2).
#Having the list of wanted X2s, the script logins to each affected node automatically.
#Checks the enbid, the transport config (especially internal IP-address).
#Logs in to the source eNB, checks whether the wanted X2 already exists, creates it if not and then checks the op-status.
#Logs in to the target enb and checks whether the termpoint has been autocreated by X2 from the source node and whether it's operational.
#Writes the reult in a table.
#This loop is iterated over all relations.
#If the user doesn't want to let X2 to create the termpoint on target nodes, then just the relation need to be repeated on the X2-list -with inversed direction.
#The script checks and displays if there's no contact to the nodes.
#It checks whether LRAT is defined.

#The script works on Ipsec X2s -if Direct IpSec via X2-feature is operational.

#Results (example):

#SOURCE-TARGET X2_LDN_source X2_operstate_source target_name X2_LDN_target X2_operstate_target
#69014BB2-69013BB2: ENodeBFunction=1,EUtraNetwork=1,ExternalENodeBFunction=23430-69013,TermPointToENB=23430-69013 1 (ENABLED) ENodeBFunction=1,EUtraNetwork=1,ExternalENodeBFunction=23430-69014,TermPointToENB=23430-69014 1 (ENABLED)
#69014BB2-69012BB2: ENodeBFunction=1,EUtraNetwork=1,ExternalENodeBFunction=23430-69012,TermPointToENB=23430-69012 0 (DISABLED) Warning: X2 CRE-FAIL on target!
#69013BB2-69012BB2: ENodeBFunction=1,EUtraNetwork=1,ExternalENodeBFunction=23430-69012,TermPointToENB=23430-69012 1 (ENABLED) ENodeBFunction=1,EUtraNetwork=1,ExternalENodeBFunction=23430-69013,TermPointToENB=23430-69013 1 (ENABLED)
#69013BB2-69011BB2: ENodeBFunction=1,EUtraNetwork=1,ExternalENodeBFunction=23430-69011,TermPointToENB=23430-69011 0 (DISABLED) Warning: X2 CRE-FAIL on target!

#Structure:
#The main script (termpointtoenb_main.mos) has 3-additional subs, which need to be placed to the same folder.
#termpointtoenb_sourcesub
#termpointtoenb_targetsub
#termpointtoenb_xtworesulttargetsub


#*****************************************************************************************************************************************************

unset all

#*********Initial variables***************************
$standard_time = `date +%Y-%m-%d"_"%H%M`
$folder = ~/CR_TermPointtoENB
#*********Initial variables ends**********************

$path = $folder/$standard_time
!mkdir $folder
!mkdir $folder/$standard_time
!mkdir $path/tmp
!mkdir $path/log


l+mmo $path/log/main.log

!find -name pathtotermpointtoenb_mos >> path_to_pathtotermpointtoenb
$linecontent = readfile(path_to_pathtotermpointtoenb)
$path_to_pathtotermpointtoenb = $linecontent[1]
!rm $path_to_pathtotermpointtoenb

!echo '$path' >> pathtotermpointtoenb_mos
!find -name termpointtoenb_targetsub >> pathtotermpointtoenb_mos
!find -name termpointtoenb_sourcesub >> pathtotermpointtoenb_mos
!find -name termpointtoenb_xtworesulttargetsub >> pathtotermpointtoenb_mos

$linecontent = readfile(pathtotermpointtoenb_mos)
$termpointtoenb_targetsub = $linecontent[2]
$termpointtoenb_sourcesub = $linecontent[3]
$termpointtoenb_xtworesulttargetsub = $linecontent[4]


!echo '************************************************************' >> $path/tmp/input_method.txt
!echo '** Do you have a file with the list of TermPointToENBs? ****' >> $path/tmp/input_method.txt
!echo '** Please confirm! yes (y) or no (n)! **********************' >> $path/tmp/input_method.txt
!echo '************************************************************' >> $path/tmp/input_method.txt

!echo '*************************************************' >> $path/tmp/x2listinp_file.txt
!echo '** Your file with the list of TermPointToENBs:***' >> $path/tmp/x2listinp_file.txt
!echo '** (Please specify! (path/filename:) ************' >> $path/tmp/x2listinp_file.txt
!echo '** The expected format is: **********************' >> $path/tmp/x2listinp_file.txt
!echo '** source-target (uppercase)*********************' >> $path/tmp/x2listinp_file.txt
!echo '** e.g. *****************************************' >> $path/tmp/x2listinp_file.txt
!echo '** 69012BB2-69012BB3 ****************************' >> $path/tmp/x2listinp_file.txt
!echo '** 69012BB2-69021BB4 ****************************' >> $path/tmp/x2listinp_file.txt
!echo '** 69021BB2-69021BB3 ****************************' >> $path/tmp/x2listinp_file.txt
!echo '*************************************************' >> $path/tmp/x2listinp_file.txt

!echo '*************************************************' >> $path/tmp/x2filelistnotfound.txt
!echo '** File not found! ******************************' >> $path/tmp/x2filelistnotfound.txt
!echo '** Please specify the correct path/filename! ****' >> $path/tmp/x2filelistnotfound.txt
!echo '*************************************************' >> $path/tmp/x2filelistnotfound.txt

!echo '*************************************************' >> $path/tmp/fileformaterror.txt
!echo '** Incorrect file format ************************' >> $path/tmp/fileformaterror.txt
!echo '** The expected format is: **********************' >> $path/tmp/fileformaterror.txt
!echo '** source-target (uppercase)*********************' >> $path/tmp/fileformaterror.txt
!echo '** e.g. *****************************************' >> $path/tmp/fileformaterror.txt
!echo '** 69012BB2-69012BB3 ****************************' >> $path/tmp/fileformaterror.txt
!echo '** 69012BB2-69021BB4 ****************************' >> $path/tmp/fileformaterror.txt
!echo '** 69021BB2-69021BB3 ****************************' >> $path/tmp/fileformaterror.txt
!echo '*************************************************' >> $path/tmp/fileformaterror.txt

!echo '*************************************************' >> $path/tmp/x2listinp_manual.txt
!echo '** Please give in the list of TermPointToenbs!***' >> $path/tmp/x2listinp_manual.txt
!echo '** and hit (f) when finished! *******************' >> $path/tmp/x2listinp_manual.txt
!echo '** The expected format is: **********************' >> $path/tmp/x2listinp_manual.txt
!echo '** source-target (uppercase)*********************' >> $path/tmp/x2listinp_manual.txt
!echo '** e.g. *****************************************' >> $path/tmp/x2listinp_manual.txt
!echo '** 69012BB2-69012BB3 (ENTER) ********************' >> $path/tmp/x2listinp_manual.txt
!echo '** 69012BB2-69021BB4 (ENTER) ********************' >> $path/tmp/x2listinp_manual.txt
!echo '** 69021BB2-69021BB3 (ENTER) ********************' >> $path/tmp/x2listinp_manual.txt
!echo '** (f) (ENTER) **********************************' >> $path/tmp/x2listinp_manual.txt
!echo '*************************************************' >> $path/tmp/x2listinp_manual.txt

!echo '*************************************************' >> $path/tmp/x2listconfirm.txt
!echo '** The list of TermPointToENBs to be defined:****' >> $path/tmp/x2listconfirm.txt
!echo '** Please confirm (y) or reject (n)! ************' >> $path/tmp/x2listconfirm.txt
!echo '*************************************************' >> $path/tmp/x2listconfirm.txt

!echo '*****************************************************************' >> $path/tmp/success.txt
!echo '** SUCCESS: The following TermPointToenbs have been added: ******' >> $path/tmp/success.txt
!echo '*****************************************************************' >> $path/tmp/success.txt

!echo '**************************************************************' >> $path/tmp/finish.txt
!echo '** FINISHED: The result is the following: ********************' >> $path/tmp/finish.txt
!echo '** Please check your logs in:$path/tmp/log/$standard_time.log ' >> $path/tmp/finish.txt
!echo '**************************************************************' >> $path/tmp/finish.txt

func badformat
!echo '*******************************************************************' >> $path/tmp/badformat.txt
!echo '** TermPointToENB=$termpointtoenb[$n] is not recognized! **********' >> $path/tmp/badformat.txt
!echo '** The expected format is: ****************************************' >> $path/tmp/badformat.txt
!echo '** source-target (uppercase)***************************************' >> $path/tmp/badformat.txt
!echo '** e.g. ***********************************************************' >> $path/tmp/badformat.txt
!echo '** 69012BB2-69012BB3 **********************************************' >> $path/tmp/badformat.txt
!echo '*******************************************************************' >> $path/tmp/badformat.txt
!cat $path/tmp/badformat.txt
endfunc

func fetchxtwolistfile
	$linecontent = readfile($xtwolistfile)
	for $n = 1 to $nr_of_lines
		$source[$n] = $linecontent[$n] -s -.*
		$target[$n] = $linecontent[$n] -s .*-
		if $linecontent[$n] ~ [0-9]+[A-Z]+[^a-z]-[0-9]+[A-Z]+[^a-z]
			$xtwolistfileformatok = 1
		else
			$xtwolistfileformatok = 0
			break
		fi
	done
	$n = $nr_of_lines
endfunc

func xtwolistconfirm
	!cat $path/tmp/xtwolist.txt
	!echo '\n'
	for ever
		$xtwolistconfirm = readinput(y/n:)
		if $xtwolistconfirm ~ y || $xtwolistconfirm ~ n
			break		
		else
			!echo 'Please hit y(yes) or n(no)!'
		fi
	done
	if $xtwolistconfirm ~ y
		break
	else if $xtwolistconfirm ~ n
		!rm -r $path/tmp/xtwolist.txt
	fi
endfunc

func xtwolistfileexist
	!cat $path/tmp/x2listinp_file.txt
	for ever
		$xtwolistfile = readinput(path/filename:)
		$linecontent = testfile($xtwolistfile)
		if $nr_of_lines = 0
			$xtwolistfileformatok = 2
		else
			fetchxtwolistfile
		fi
		if $xtwolistfileformatok = 1
			!cp $xtwolistfile $path/tmp/xtwolist.txt
			!cat $path/tmp/x2listconfirm.txt
			xtwolistconfirm
		else if $xtwolistfileformatok = 0
			!cat $path/tmp/fileformaterror.txt
		else if $xtwolistfileformatok = 2
			!cat $path/tmp/x2filelistnotfound.txt
		fi
	done
endfunc

func manual		
	!cat $path/tmp/x2listinp_manual.txt
	for ever
		$n = $n + 1
		$termpointtoenb[$n] = readinput(TermPointToENB / f[finished]:)
		if $termpointtoenb[$n] ~ [0-9]+[A-Z]+[^a-z]-[0-9]+[A-Z]+[^a-z]
			!echo $termpointtoenb[$n] >> $path/tmp/xtwolist.txt
			$xtwolistfile = $path/tmp/xtwolist.txt
		else if $termpointtoenb[$n] ~ f
			!cat $path/tmp/x2listconfirm.txt
			xtwolistconfirm
		else
			badformat
		fi
	done
	fetchxtwolistfile
endfunc

!cat $path/tmp/input_method.txt
for ever
	$inputmethod = readinput(y/n:)
	if $inputmethod ~ y
		xtwolistfileexist
		break
	else if $inputmethod ~ n
		manual
		break
	else
		!echo 'Please hit y(yes) or n(no)!'
	fi
done

func writedata
	!rm $path/tmp/sequence.txt
	# $linecontent[1] = $sequence
	# $linecontent[2] = $source
	# $linecontent[3] = $target
	
	!echo '$sequence' >>					$path/tmp/sequence.txt
	!echo '$source[$sequence]' >>			$path/tmp/sequence.txt
	!echo '$target[$sequence]' >>			$path/tmp/sequence.txt
endfunc

func targetsub
	!monode $target[$sequence] 'run $termpointtoenb_targetsub'
	$linecontent = testfile($path/tmp/targetcontactok[$sequence].txt)
	$targetcontactok = $nr_of_lines
	$linecontent = testfile($path/tmp/ratfoundtarget[$sequence].txt)
	$ratfoundtarget = $nr_of_lines 
endfunc

func sourcesub
	!monode $source[$sequence] 'run $termpointtoenb_sourcesub'
	$linecontent = testfile($path/tmp/sourcecontactok[$sequence].txt)
	$sourcecontactok = $nr_of_lines
	$linecontent = testfile($path/tmp/ratfoundsource[$sequence].txt)
	$ratfoundsource = $nr_of_lines
	
	if $sourcecontactok = 0
		nocontacttosource
	else if $ratfoundsource = 0
		noratfoundsource
	else
		fetchresult
		writeresult
	fi
endfunc

func fetchresult
	$linecontent = readfile($path/tmp/sourcedata[$sequence].txt)
	$xtwoldnsource = $linecontent[3]
	$xtwonotcreatedonsource = $linecontent[2]
	$xtwoopstsource = $linecontent[4]
	
	!monode $target[$sequence] 'run $termpointtoenb_xtworesulttargetsub'
	$linecontent = readfile($path/tmp/targetresult[$sequence].txt)
	$xtwonotcreatedontarget = $linecontent[1]
	$xtwoopsttarget = $linecontent[2]
	$xtwoldntarget = $linecontent[3]
endfunc

func nocontacttotarget
	!echo 'target: $target[$sequence] NO_CONTACT_TO_TARGET' >> $path/tmp/result.txt
endfunc
	
func nocontacttosource
	!echo 'source: $source[$sequence] NO_CONTACT_TO_SOURCE' >> $path/tmp/result.txt
endfunc

func noratfoundtarget
	!echo 'target: $target[$sequence]: NO_LRAT_FOUND_ON_TARGET' >> $path/tmp/result.txt
endfunc

func noratfoundsource
	!echo 'source: $source[$sequence]: NO_LRAT_FOUND_ON _SOURCE' >> $path/tmp/result.txt
endfunc

func writeresult
	if $xtwonotcreatedonsource = 1
		!echo '$source[$sequence]-$target[$sequence]: Warning: X2 CRE-FAIL on source!' >> $path/tmp/result.txt	
	else if $xtwonotcreatedontarget = 1
		!echo '$source[$sequence]-$target[$sequence]: $xtwoldnsource $xtwoopstsource Warning: X2 CRE-FAIL on target!' >> $path/tmp/result.txt
	else
		!echo '$source[$sequence] $xtwoldnsource $xtwoopstsource	$target[$sequence]	$xtwoldntarget	$xtwoopsttarget' >> $path/tmp/result.txt	
	fi
endfunc

func displayresult
	!cat $path/tmp/finish.txt
	!cat $path/tmp/result.txt
	!echo 'You can find the same in $path/tmp/result.txt'
endfunc
	
func header
	!echo 'SOURCE-TARGET	X2_LDN_source	X2_operstate_source	target_name	X2_LDN_target	X2_operstate_target ' >> $path/tmp/result.txt
endfunc

header

for $sequence = 1 to $n

	unset $targetcontactok
	unset $ratfoundtarget
	unset $sourcecontactok
	unset $ratfoundsource
	
	writedata
	targetsub
	if $targetcontactok = 0
		nocontacttotarget
	else if $ratfoundtarget = 0
		noratfoundtarget
	else
		sourcesub
	fi
done

displayresult
	
return

!rm pathtotermpointtoenb_mos

l-